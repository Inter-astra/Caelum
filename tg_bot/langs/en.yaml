# Language name in their native
language: "English ðŸ‡ºðŸ‡²"
# name of people(s) who worked on this translation
authors: "@dank_as_fuck and @Stella_Lucem"

# languages
curr_chat_lang: "Hey. Your current language is {}, select the one you want from the buttons below :)"
set_chat_lang: "Great, {} it is from now on!"


pm_start_text: |
   Hi {}, my name is {}!
   I am an Anime themed group management bot with some fun extras ;)

   You can find the list of available commands with /help.
grp_start_text: "Hi, I'm Caelum."

pm_help_text: |
   Hello there! My name is *Caelum*.
   I'm a modular group management bot with a few fun extras! Have a look at the following for an idea of some of
   the things I can help you with.
   *Main* commands available:
    â€¢ `/start`*:* Starts me, can be used to check I'm alive or not.
    â€¢ `/help`*:* PM's you this message.
    â€¢ `/language`*:* Change bot language.
    â€¢ `/settings`*:*
      - in PM: will send you your settings for all supported modules.
      - in a group: will redirect you to pm, with all that chat's settings.
    Click on the buttons below to get documentation about specific modules!

add_bot_to_group_btn: "Add Caelum"
support_chat_link_btn: "Support Chat"
src_btn: "Source code"

# General things
not_user: "I doubt that's a user."
cant_find: "Can't seem to find this person."
incorr_id: "You don't seem to be referring to a user or the ID specified is incorrect.."
owner_only: "Only owner of the chat can do this."
need_admin: "You need to be admin to do this."

admin_help: |
   â€¢ `/admins`*:* list of admins in the chat

   *Admins only:*
   â€¢ `/pin`*:* silently pins the message replied to - add `'loud'` or `'notify'` to give notifs to users.
   â€¢ `/unpin`*:* unpins the currently pinned message
   â€¢ `/invitelink`*:* gets invitelink
   â€¢ `/promote`*:* promotes the user replied to
   â€¢ `/demote`*:* demotes the user replied to
   â€¢ `/title <title here>`*:* sets a custom title for an admin that the bot promoted

# admin stuff
unsuff_right: "You don't have the necessary rights to do that!"
admin_already: "How am I meant to promote someone that's already an admin?"
prom_myself: "I can't promote myself! Get an admin to do it for me."
not_here: "I can't promote someone who isn't in the group."
prom_fail: "An error occured while promoting."
prom_succ: "Sucessfully promoted!"
demo_creator: "This person CREATED the chat, how would I demote them?"
wasnt_admin: "Can't demote what wasn't promoted!"
demo_myself: "I can't demote myself! Get an admin to do it for me."
demo_succ: "Sucessfully demoted!"
else_prom: "Could not demote. I might not be admin, or the admin status was appointed by another user, so I can't act upon them!"
cache_ref: "Admins cache refreshed!"
title_creator: "This person CREATED the chat, how can i set custom title for him?"

title_member: |
    Can't set title for non-admins!
    Promote them first to set custom title!

title_myself: "I can't set my own title myself! Get the one who made me admin to do it for me."
title_blank: "Setting blank title doesn't do anything!"

title_char: |
  The title length is longer than 16 characters.
  Truncating it to 16 characters.

title_else: "I can't set custom title for admins that I didn't promote!"
inv_unsuff: "I don't have access to the invite link, try changing my permissions!"
inv_chat: "I can only give you invite links for supergroups and channels, sorry!"


afk_help: |
   - `/afk <reason>`*:* mark yourself as AFK(away from keyboard).
   - brb <reason>: same as the afk command - but not a command.
   When marked as AFK, any mentions will be replied to with a message to say you're not available!

anilist_help: |
    *AniList*
    Get information about anime, manga or characters with the help of this module! All data is fetched from [AniList](anilist.co).
    *Available commands:*
     - `/anime <anime>`*:* returns information about the anime.
     - `/character <character>`*:* returns information about the character.
     - `/manga <manga>`*:* returns information about the manga.

antiflood_help: |
    Antiflood allows you to take action on users that send more than x messages in a row. Exceeding the set flood
    will result in restricting that user.
     This will mute users if they send more than 10 messages in a row, bots are ignored.
     â€¢ `/flood`*:* Get the current flood control setting
    â€¢ *Admins only:*
     â€¢ `/setflood <int/'no'/'off'>`*:* enables or disables flood control
     *Example:* `/setflood 10`
     â€¢ `/setfloodmode <ban/kick/mute/tban/tmute> <value>`*:* Action to perform when user have exceeded flood limit. ban/kick/mute/tmute/tban
    â€¢ *Note:*
     â€¢ Value must be filled for tban and tmute!!
     It can be:
     `5m` = 5 minutes
     `6h` = 6 hours
     `3d` = 3 days
     `1w` = 1 week

approve_help: |
     Sometimes, you might trust a user not to send unwanted content.
     Maybe not enough to make them admin, but you might be ok with locks, blacklists, and antiflood not applying to them.
     That's what approvals are for - approve of trustworthy users to allow them to send
     *Admin commands:*
     â€¢ `/approval`*:* Check a user's approval status in current chat.
     â€¢ `/approve`*:* Approve of a user. Locks, blacklists, and antiflood won't apply to them anymore.
     â€¢ `/unapprove`*:* Unapprove of a user. They will now be subject to locks, blacklists, and antiflood again.
     â€¢ `/approved`*:* List all approved users.
     â€¢ `/unapproveall`*:* Unapprove *ALL* users in a chat. This cannot be undone.

backup_help: |
    *Admin only:*
     - `/import`*:* reply to a group butler backup file to import as much as possible, making the transfer super simple! Note \
       that files/photos can't be imported due to telegram restrictions.
     - `/export`*:* !!! This isn't a command yet, but should be coming soon!

bans_help: |
    - `/kickme`*:* kicks the user who issued the command

     *Admin only:*
    - /ban <userhandle>: bans a user. (via handle, or reply)
    - /tban <userhandle> x(m/h/d): bans a user for x time. (via handle, or reply). m = minutes, h = hours, d = days.
    - /unban <userhandle>: unbans a user. (via handle, or reply)
    - /kick <userhandle>: kick a user out of the group, (via handle, or reply)

ban_myself: "Oh yeah, ban myself, noob!"
ban_owner: "I'd never ban my owner."
ban_sudo: "I can't ban a sudo user, try another one"
succ_banned: "I've cut the rope of {} 'till you decide to tie!"

blacklist_help: |
    Blacklists are used to stop certain triggers from being said in a group. Any time the trigger is mentioned, the message will immediately be deleted. A good combo is sometimes to pair this up with warn filters!

    *NOTE*: Blacklists do not affect group admins.

     â€¢ `/blacklist`*:* View the current blacklisted words.

    Admin only:
     â€¢ `/addblacklist <triggers>`*:* Add a trigger to the blacklist. Each line is considered one trigger, so using different lines will allow you to add multiple triggers.
     â€¢ `/unblacklist <triggers>`*:* Remove triggers from the blacklist. Same newline logic applies here, so you can remove multiple triggers at once.
     â€¢ `/blacklistmode <off/del/warn/ban/kick/mute/tban/tmute>`*:* Action to perform when someone sends blacklisted words.

cleaner_help: |
    - `/cleanblue <on/off/yes/no>`*:* clean commands after sending
    - `/ignoreblue <word>`*:* prevent auto cleaning of the command
    - `/unignoreblue <word>`*:* remove prevent auto cleaning of the command
    - `/listblue`*:* list currently whitelisted commands

    For example: `/(un)ignoreblue hello` to ignore `/hello`

connections_help: |
    - /connect: connect a chat (Can be done in a group by /connect or /connect <chat id> in PM)
    - /connection: list connected chats
    - /disconnect: disconnect from a chat
    - /helpconnect: list available commands that can be done remotely

     *Admin only:*
    - /allowconnect <yes/no>: allow a user to connect to a chat

cust_filters_help: |
    â€¢ `/filters`*:* List all active filters saved in the chat.

     *Admin only:*
    â€¢ `/filter <keyword> <reply message>`*:* Add a filter to this chat. The bot will now reply that message whenever 'keyword'
      is mentioned. If you reply to a sticker with a keyword, the bot will reply with that sticker. NOTE: all filter
      keywords are in lowercase. If you want your keyword to be a sentence, use quotes. eg: /filter "hey there" How you
      doin?
    â€¢ `/stop <filter keyword>`*:* Stop that filter.

     *Chat creator only:*
    â€¢ `/removeallfilters`*:* Remove all chat filters at once.

      *Note*: Filters also support markdown formatters like: {first}, {last} etc.. and buttons.
        Check `/markdownhelp` to know more!

disable_help: |
    Not everyone wants every feature that the bot offers. Some commands are best
    left unused; to avoid spam and abuse.

    This allows you to disable some commonly used commands, so noone can use them.
    It'll also allow you to autodelete them, stopping people from bluetexting.

     â€¢ `/cmds`*:* Check the current status of disabled commands

     *Admin only:*
     â€¢ `/enable <cmd name>`*:* Enable that command
     â€¢ `/disable <cmd name>`*:* Disable that command
     â€¢ `/listcmds`*:* List all possible disablable commands

feds_menu_help: |
    Ah, group management. Everything is fun, until the spammer starts entering your group, and you have to block it. Then you need to start banning more, and more, and it hurts.
    But then you have many groups, and you don't want this spammer to be in one of your groups - how can you deal? Do you have to manually block it, in all your groups?

    No longer! With Federation, you can make a ban in one chat overlap with all other chats.
    You can even designate admin federations, so your trusted admin can ban all the chats you want to protect.

    *Commands*:
    For better and cleaner menu, feds are divided into 3 sections.
    â€¢ `/fowner`
    â€¢ `/fadmin`
    â€¢ `/fuser`

feds_owner_help: |
     â€¢ `/newfed <fedname>`*:* Create a new Federation with the name given. Users are only allowed to have one Federation. This method can also be used to rename the Federation. (max. 64 characters)
     â€¢ `/delfed: Delete your Federation, and any information related to it. Will not cancel blocked users.
     â€¢ `/fpromote <user>`*:* Promote Users to give fed admin. Fed owner only.
     â€¢ `/fdemote <user>`*:* Drops the User from the admin Federation to a normal User. Fed owner only.
     â€¢ `/importfbans`*:* Reply to the Federation backup message file to import the banned list to the Federation now. (disabled for now.)
     
feds_admin_help: |
     â€¢ `/fbanlist`*:* Displays all users who are victimized at the Federation at this time.
     â€¢ `/fban <user>: Prohibits users from all federations where this chat takes place, and executors have control over.
     â€¢ `/unfban <user>: Cancel User from all federations where this chat takes place, and that the executor has control over.
     â€¢ `/setfrules`*:* Arrange Federation rules.

fed_user_help: |
     â€¢ `/frules`*:* See Federation regulations.
     â€¢ `/joinfed <FedID>`*:* Join the current chat to the Federation. Only chat owners can do this. Every chat can only be in one Federation.
     â€¢ `/fedstat`*:* See your own fbans.
     â€¢ `/fstat`*:* Same as fedstat.
     â€¢ `/fedinfo <FedID>`*:* See infos about specified fed.
     â€¢ `/fedadmins`*:* Lists the fedadmins
     
fun_help: |
     â€¢ `/runs`*:* reply a random string from an array of replies.
     â€¢ `/pat`*:* pat a person, cool thing to have for cute ones :3
     â€¢ `/slap`*:* slap a user, or get slapped if not a reply.
     â€¢ `/shrug` : get shrug XD.
     â€¢ `/table` : get flip/unflip :v.
     â€¢ `/decide` : Randomly answers yes/no/maybe
     â€¢ `/toss` : Tosses A coin
     â€¢ `/roll` : Roll a dice.
     â€¢ `/rlg` : Join ears,nose,mouth and create an emo ;-;
     â€¢ `/shout <keyword>`*:* write anything you want to give loud shout.
     â€¢ `/stickerid`*:* reply to a sticker to get its ID.
     â€¢ `/getsticker`*:* reply to a sticker to get the raw PNG image.
     â€¢ `/steal`*:* reply to a sticker or image to add it to your pack.
     â€¢ `/kang`*:* same as /steal.
     â€¢ `/stickers`*:* search stickers in combot sticker finder.

antispam_help: |
     *Admins only:*
      â€¢ `/antispam <on/off/yes/no>`*:* Will toggle our antispam tech or return your current settings.

     Anti-Spam, used by bot devs to ban spammers across all groups. This helps protect
     you and your groups by removing spam flooders as quickly as possible.
     *Note:* Users can appeal gbans or report spammers at @Caelumetsup

     Caelum also integrates @Spamwatch and @Intellivoid's SpamProtectionBot API to remove Spammers as much as possible from your chatroom!
     *What is SpamWatch?*
     SpamWatch maintains a large constantly updated ban-list of spambots, trolls, bitcoin spammers and unsavoury characters.
     Constantly help banning spammers off from your group automatically So, you wont have to worry about spammers storming your group.
     *Note:* Users can appeal spamwatch bans at @SpamwatchSupport

     *What is Spam protection?*
     SpamProtection is the new AI antispam service which makes sure that your chat is free of spambots, scammers, and pedophiles.
     Uses @Intellivoid's Coffeehouse Artificial Engine. Every ban is checked by real trusty people before being finalized.

gtranslate_help: |
     â€¢ `/tr` or `/tl` (language code) as reply to a long message.
     *Example:* `/tr en`*:* translates something to english.
         `/tr ja-en`*:* translates Japanese to english.

     *Lang Codes available:*
     `
     af,am,ar,az,be,bg,bn,bs,ca,ceb,co,cs,cy,da,de,el,en,eo,es,
     et,eu,fa,fi,fr,fy,ga,gd,gl,gu,ha,haw,hi,hmn,hr,ht,hu,hy,
     id,ig,is,it,iw,ja,jw,ka,kk,km,kn,ko,ku,ky,la,lb,lo,lt,lv,mg,mi,mk,
     ml,mn,mr,ms,mt,my,ne,nl,no,ny,pa,pl,ps,pt,ro,ru,sd,si,sk,sl,
     sm,sn,so,sq,sr,st,su,sv,sw,ta,te,tg,th,tl,tr,uk,ur,uz,
     vi,xh,yi,yo,zh,zh_CN,zh_TW,zu
     `
locks_help: |
     Do stickers annoy you? or want to avoid people sharing links? or pictures?
     You're in the right place!
     The locks module allows you to lock away some common items in the
     telegram world; the bot will automatically delete them!

      â€¢ `/locktypes`*:* Lists all possible locktypes

     *Admins only:*
      â€¢ `/lock <type>`*:* Lock items of a certain type (not available in private)
      â€¢ `/unlock <type>`*:* Unlock items of a certain type (not available in private)
      â€¢ `/locks`*:* The current list of locks in this chat.

     Locks can be used to restrict a group's users.
     eg:
     Locking urls will auto-delete all messages with urls, locking stickers will restrict all
     non-admin users from sending stickers, etc.
     Locking bots will stop non-admins from adding bots to the chat.

     *Note:*
      â€¢ Unlocking permission *info* will allow members (non-admins) to change the group information, such as the description or the group name
      â€¢ Unlocking permission *pin* will allow members (non-admins) to pinned a message in a group

log_help: |
      *Admins only:*
      â€¢ `/logchannel`*:* get log channel info
      â€¢ `/setlog`*:* set the log channel.
      â€¢ `/unsetlog`*:* unset the log channel.

      Setting the log channel is done by:
      â€¢ adding the bot to the desired channel (as an admin!)
      â€¢ sending `/setlog` in the channel
      â€¢ forwarding the `/setlog` to the group

markdown_help_text: |
      Markdown is a very powerful formatting tool supported by telegram. Caelum has some enhancements, to make sure that
      saved messages are correctly parsed, and to allow you to create buttons.

      - <code>_italic_</code>: wrapping text with '_' will produce italic text
      - <code>*bold*</code>: wrapping text with '*' will produce bold text
      - <code>`code`</code>: wrapping text with '`' will produce monospaced text, also known as 'code'
      - <code>[sometext](someURL)</code>: this will create a link - the message will just show <code>sometext</code>,
      and tapping on it will open the page at <code>someURL</code>.
      EG: <code>[test](example.com)</code>

      - <code>[buttontext](buttonurl:someURL)</code>: this is a special enhancement to allow users to have telegram
      buttons in their markdown. <code>buttontext</code> will be what is displayed on the button, and <code>someurl</code>
      will be the url which is opened.
      EG: <code>[This is a button](buttonurl:example.com)</code>

      If you want multiple buttons on the same line, use :same, as such:
      <code>[one](buttonurl://example.com)
      [two](buttonurl://google.com:same)</code>
      This will create two buttons on a single line, instead of one button per line.

      Keep in mind that your message <b>MUST</b> contain some text other than just a button!

misc_help: |
      â€¢ /id: get the current group id. If used by replying to a message, gets that user's id.
      â€¢ /gifid: reply to a gif to me to tell you its file ID.
      â€¢ /info: get information about a user.
      â€¢ /markdownhelp: quick summary of how markdown works in telegram - can only be called in private chats.
      â€¢ /ud <word>: Type the word or expression you want to search use.
      â€¢ /urban <word>: Same as /ud
      â€¢ /paste: Do a paste at `nekobin.com`
      â€¢ /react: Reacts with a random reaction
      â€¢ /weebify <text>: returns a weebified text
      â€¢ /tr (language code) as reply to a long message.
      â€¢ /time <query>: Gives information about a timezone.
      â€¢ /cash: currency converter
        example syntax: /cash 1 USD INR
      â€¢ /cinfo: get info about a user or a chat (uses @Pyrogram methods)
      â€¢ /getid: get IDs of chat, user and chat message.
      â€¢ /spbinfo: get info about a user from @Intellivoid's SpamProtection API
      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      *Last.FM*
      Share what you're what listening to with the help of this module!
      *Available commands:*
      â€¢ /setuser <username>: sets your last.fm username.
      â€¢ /clearuser: removes your last.fm username from the bot's database.
      â€¢ /lastfm: returns what you're scrobbling on last.fm.

muting_help: |
      *Admins only:*
       â€¢ `/mute <userhandle>`*:* silences a user. Can also be used as a reply, muting the replied to user.
       â€¢ `/tmute <userhandle> x(m/h/d)`*:* mutes a user for x time. (via handle, or reply). `m` = `minutes`, `h` = `hours`, `d` = `days`.
       â€¢ `/unmute <userhandle>`*:* unmutes a user. Can also be used as a reply, muting the replied to user.

notes_help: |
       â€¢ `/get <notename>`*:* get the note with this notename
       â€¢ `#<notename>`*:* same as /get
       â€¢ `/notes` or `/saved`*:* list all saved notes in this chat
       â€¢ `/number` *:* Will pull the note of that number in the list.
        If you would like to retrieve the contents of a note without any formatting, use `/get <notename> noformat`. This can
        be useful when updating a current note.

        *Admins only:*
       â€¢ `/save <notename> <notedata>`*:* saves notedata as a note with name notename
        A button can be added to a note by using standard markdown link syntax - the link should just be prepended with a
         `buttonurl:` section, as such: `[somelink](buttonurl:example.com)`. Check `/markdownhelp` for more info.
       â€¢ `/save <notename>`*:* save the replied message as a note with name notename
       â€¢ `/clear <notename>`*:* clear note with this name
       â€¢ `/removeallnotes`*:* removes all notes from the group
       *Note:* Note names are case-insensitive, and they are automatically converted to lowercase before getting saved.

notelist: |
       Get note by `/notenumber` or `#notename`

          *ID*    *Note* 

nonote: "No notes in this chat!"
delalldone: "Deleted all notes."
delallcan: "Clearing of all notes has been cancelled."
       
purge_help: |
       *Admin only:*
        â€¢ /del: deletes the message you replied to
        â€¢ /purge: deletes all messages between this and the replied to message.
        â€¢ /purge <integer X>: deletes the replied message, and X messages following it if replied to a message.

only_admin: "Only Admins are allowed to use this command"
purge_fail: "Can't seem to purge the message"
purge_where: "Reply to a message to select where to start purging from."
purge_cant: "Can't seem to delete this?"
purge_no_msg: "Whadya want to delete?"
purge_succ: |
        Purged messages successfully
        This message will delete itself in 3 secs.

reports_help: |
        â€¢ `/report <reason>`*:* reply to a message to report it to admins.
        â€¢ `@admin`*:* reply to a message to report it to admins.
         *NOTE:* Neither of these will get triggered if used by admins.

         *Admins only:*
          â€¢ `/reports <on/off>`*:* change report setting, or view current status.
          â€¢ If done in pm, toggles your status.
          â€¢ If in group, toggles that groups's status.

rules_help: |
      â€¢ `/rules`*:* get the rules for this chat.
       *Admins only:*
      â€¢ `/setrules <your rules here>`*:* set the rules for this chat.
      â€¢ `/clearrules`*:* clear the rules for this chat.

userinfo_help: |
      - /setbio <text>: while replying, will save another user's bio
      - /bio: will get your or another user's bio. This cannot be set by yourself.
      - /setme <text>: will set your info
      - /me: will get your or another user's info

warns_help: |
      â€¢ `/warns <userhandle>`*:* get a user's number, and reason, of warns.
      â€¢ `/warnlist`*:* list of all current warning filters

      *Admins only:*
      â€¢ `/warn <userhandle>`*:* warn a user. After 3 warns, the user will be banned from the group. Can also be used as a reply.
      â€¢ `/resetwarn <userhandle>`*:* reset the warns for a user. Can also be used as a reply.
      â€¢ `/addwarn <keyword> <reply message>`*:* set a warning filter on a certain keyword. If you want your keyword to
      be a sentence, encompass it with quotes, as such: `/addwarn "very angry" This is an angry user`.
      â€¢ `/nowarn <keyword>`*:* stop a warning filter
      â€¢ `/warnlimit <num>`*:* set the warning limit
      â€¢ `/strongwarn <on/yes/off/no>`*:* If set to on, exceeding the warn limit will result in a ban. Else, will just kick.

greetings_help: |
      *Admins only:*
       â€¢ `/welcome <on/off>`*:* enable/disable welcome messages.
       â€¢ `/welcome`*:* shows current welcome settings.
       â€¢ `/welcome noformat`*:* shows current welcome settings, without the formatting - useful to recycle your welcome messages!
       â€¢ `/goodbye`*:* same usage and args as `/welcome`.
       â€¢ `/setwelcome <sometext>`*:* set a custom welcome message. If used replying to media, uses that media.
       â€¢ `/setgoodbye <sometext>`*:* set a custom goodbye message. If used replying to media, uses that media.
       â€¢ `/resetwelcome`*:* reset to the default welcome message.
       â€¢ `/resetgoodbye`*:* reset to the default goodbye message.
       â€¢ `/cleanwelcome <on/off>`*:* On new member, try to delete the previous welcome message to avoid spamming the chat.
       â€¢ `/welcomemutehelp`*:* gives information about welcome mutes.
       â€¢ `/cleanservice <on/off`*:* deletes telegrams welcome/left service messages.
       *Example:*
      user joined chat, user left chat.

      *Welcome markdown:*
       â€¢ `/welcomehelp`*:* view more formatting information for custom welcome/goodbye messages.

stickers_help: |
       If you don't want users to send specific stickers then this module will be useful.
       
       *Admin only*
       â€¢ `/banpack`*:* blacklists the replied sticker
       â€¢ `/unbanpack`*:* Removes the blacklist of replied sticker
       â€¢ `/banpmode`*:* Decide what Caelum will do when a blacklisted sticker sent
       Available modes are ban, tban, mute, tmute, delete and nothing
       You can (un)ban using <packlink> too.

lydia_help: |
       Lydia is an artificial intelligence can talk with you like a human.
       You can have fun with Lydia ðŸ˜ƒ
       
       *Commands are (admin only):*
       â€¢ `/addchat`*:* Enables Lydia in your chat
       â€¢ `/rmchat`*:* Disables Lydia in your chat

       Powered by [Coffeehouse](https://coffeehouse.intellivoid.net), @Intellivoid

nlp_help: |
      *Chatroom Spam Prediction*
       This feature uses @Intellivoid's Coffeehouse AI to
       process chat messages and detect spam.
       This comes under Coffehouse' NLP. Learn more about
       it [here](https://docs.intellivoid.net/coffeehouse/v1/nlp/spam_prediction/chatroom)
       *Command:*
        â€¢ `/nlpstat <on/off/yes/no>`*:* toggle NLP in your chat.

delacc_help: |
      â€¢ `/delacc`*:* Check chat if has deleted accounts.
      â€¢ `/delacc clean`*:* Kick deleted accounts out!

neko_paste: "What am I supposed to do with this?"